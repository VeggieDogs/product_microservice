openapi: 3.0.0
info:
  title: Product API
  version: 1.0.0
  description: API for managing products, including searching, adding, and deleting products.

servers:
  - url: http://127.0.0.1:8888
    description: Local server

paths:
  /search_product:
    get:
      summary: Search products by name
      description: Search for products by name with pagination options.
      parameters:
        - name: product_name
          in: query
          required: true
          schema:
            type: string
          description: The name of the product to search for.
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number for pagination.
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            default: 6
          description: Number of products per page.
      responses:
        "200":
          description: List of products matching the search criteria.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    product_id:
                      type: integer
                    product_name:
                      type: string
                    price:
                      type: number
                      format: float
                    quantity:
                      type: integer
                    description:
                      type: string
                    image_url:
                      type: string
                    is_sold:
                      type: boolean
                    created_at:
                      type: string
                      format: date-time
                    seller_id:
                      type: integer
        "400":
          description: Bad Request - product_name parameter is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "product_name parameter is required"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"

  /search_products_by_user_id:
    get:
      summary: Search products by user ID
      description: Retrieve products posted by a specific user.
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: integer
          description: The unique ID of the user (seller).
      responses:
        "200":
          description: List of products associated with the user ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        product_id:
                          type: integer
                        product_name:
                          type: string
                        price:
                          type: number
                          format: float
                        quantity:
                          type: integer
                        description:
                          type: string
                        image_url:
                          type: string
                        is_sold:
                          type: boolean
                        created_at:
                          type: string
                          format: date-time
                        seller_id:
                          type: integer
        "400":
          description: Bad Request - user_id parameter is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "user_id parameter is required"
        "404":
          description: No products found for this user ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "No products found for this user ID"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"

  /post_product:
    post:
      summary: Add a new product
      description: Create a new product entry in the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                price:
                  type: number
                  format: float
                quantity:
                  type: integer
                description:
                  type: string
                image_url:
                  type: string
                seller_id:
                  type: integer
              required:
                - product_name
                - price
                - quantity
                - description
                - image_url
                - seller_id
      responses:
        "201":
          description: Product successfully created.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "New product added"
        "400":
          description: Missing required fields in the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Missing required fields"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"

  /delete_product:
    delete:
      summary: Delete a product by product ID
      description: Deletes a product by specifying the product ID.
      parameters:
        - name: product_id
          in: query
          required: true
          schema:
            type: integer
          description: The unique ID of the product to delete.
      responses:
        "200":
          description: Product successfully deleted.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Product with ID {product_id} deleted successfully"
        "400":
          description: Bad Request - product_id parameter is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "product_id parameter is required"
        "500":
          description: Server Error - Database connection error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Error: Database connection error"
